# Database Configuration# Database Configuration# .env.example

DATABASE_URL=postgresql://user:password@db:5432/voicegenie_db

DATABASE_URL=postgresql://user:password@db:5432/voicegenie_db# Copy this file to .env and fill in the values.

# Google Gemini Configuration

GEMINI_API_KEY=your_gemini_api_key_here# ----------------------------------------------------

GEMINI_MODEL=gemini-1.5-flash

GEMINI_VOICE_MODEL=gemini-1.5-flash# Google Gemini Configuration



# Groq ConfigurationGEMINI_API_KEY=your_gemini_api_key_here# --- Backend Configuration ---

GROQ_API_KEY=your_groq_api_key_here

GROQ_MODEL=llama-3.1-70b-versatileGEMINI_MODEL=gemini-1.5-flash# Use a PostgreSQL connection string for production.



# LLM Provider Selection (choose: gemini or groq)GEMINI_VOICE_MODEL=gemini-1.5-flash# For local development with docker-compose, this will connect to the 'db' service.

# - gemini: Best for advanced reasoning, multimodal capabilities (~100 tokens/sec)

# - groq: Best for ultra-fast responses, real-time conversations (up to 750 tokens/sec)DATABASE_URL=postgresql://user:password@db:5432/voicegenie_db

LLM_PROVIDER=gemini

# Groq Configuration

# ElevenLabs Configuration

ELEVENLABS_API_KEY=your_elevenlabs_api_key_hereGROQ_API_KEY=your_groq_api_key_here# --- Self-Hosted AI Services ---

# Voice ID - Default is Rachel (21m00Tcm4TlvDq8ikWAM)

# Browse voices at: https://elevenlabs.io/voice-libraryGROQ_MODEL=llama-3.1-70b-versatile# The URL for your self-hosted Ollama instance

ELEVENLABS_VOICE_ID=21m00Tcm4TlvDq8ikWAM

ELEVENLABS_MODEL_ID=eleven_monolingual_v1OLLAMA_HOST=http://ollama:11434



# STT (Speech-to-Text) Provider Selection (choose: gemini or deepgram)# LLM Provider Selection (choose: gemini or groq)

# - gemini: Good accuracy, multimodal capabilities

# - deepgram: Industry-leading accuracy, ultra-fast, real-time transcription# - gemini: Best for advanced reasoning, multimodal capabilities (~100 tokens/sec)# The name of the LLM model to use within Ollama (e.g., "mistral", "llama2")

STT_PROVIDER=deepgram

# - groq: Best for ultra-fast responses, real-time conversations (up to 750 tokens/sec)LLM_MODEL_NAME=mistral

# Deepgram Configuration (for STT)

DEEPGRAM_AUTH_TOKEN=your_deepgram_auth_token_hereLLM_PROVIDER=gemini

# Model options: nova-2 (latest), nova, enhanced, base

DEEPGRAM_MODEL=nova-2# The size of the Whisper model to use ('tiny', 'base', 'small', 'medium', 'large')



# Twilio Configuration (for telephony)# ElevenLabs Configuration# Smaller models are faster but less accurate. 'base' is a good starting point.

TWILIO_ACCOUNT_SID=your_twilio_account_sid_here

TWILIO_AUTH_TOKEN=your_twilio_auth_token_hereELEVENLABS_API_KEY=your_elevenlabs_api_key_hereWHISPER_MODEL_SIZE=base

TWILIO_PHONE_NUMBER=your_twilio_phone_number_here

# Voice ID - Default is Rachel (21m00Tcm4TlvDq8ikWAM)

# Application Settings

SECRET_KEY=your_secret_key_here_change_in_production# Browse voices at: https://elevenlabs.io/voice-library# The name of the Coqui TTS model to use. A good default is provided.

AUDIO_DIR=/app/audio_files

PUBLIC_URL=http://localhost:8000ELEVENLABS_VOICE_ID=21m00Tcm4TlvDq8ikWAM# Find more models at https://github.com/coqui-ai/TTS/blob/dev/TTS/server/configs/config.json



# =============================================================================ELEVENLABS_MODEL_ID=eleven_monolingual_v1TTS_MODEL_NAME=tts_models/en/ljspeech/vits

# SETUP INSTRUCTIONS:

# =============================================================================

# 1. Copy this file to .env: cp .env.example .env

# # Twilio Configuration (for telephony)# --- Application Settings ---

# 2. Get your API keys:

#    - Gemini: https://ai.google.dev/TWILIO_ACCOUNT_SID=your_twilio_account_sid_here# A secret key for signing tokens, etc. Generate a random one for production.

#    - Groq: https://console.groq.com/

#    - ElevenLabs: https://elevenlabs.io/TWILIO_AUTH_TOKEN=your_twilio_auth_token_hereSECRET_KEY=your-super-secret-key-change-me

#    - Deepgram: https://console.deepgram.com/

#    - Twilio: https://www.twilio.com/TWILIO_PHONE_NUMBER=your_twilio_phone_number_here

#

# 3. Replace all "your_*_here" placeholders with your actual API keysTWILIO_ACCOUNT_SID=ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

#

# 4. Choose your LLM provider: LLM_PROVIDER=gemini or groq# Application SettingsTWILIO_AUTH_TOKEN=your_auth_token_from_twilio

#

# 5. Choose your STT provider: STT_PROVIDER=deepgram or geminiSECRET_KEY=your_secret_key_here_change_in_productionTWILIO_PHONE_NUMBER=+15017122661

#

# 6. (Optional) Customize voice by changing ELEVENLABS_VOICE_IDAUDIO_DIR=/app/audio_files

#

# 7. (Optional) Change models if you want different versionsPUBLIC_URL=http://localhost:8000# --- ADD THESE TWO LINES ---

#

# 8. Run: docker compose up --build -dFASTER_WHISPER_MODEL_SIZE=tiny.en

# =============================================================================

# =============================================================================FASTER_WHISPER_COMPUTE_TYPE=int8
# SETUP INSTRUCTIONS:
# =============================================================================
# 1. Copy this file to .env: cp .env.example .env
# 
# 2. Get your API keys:
#    - Gemini: https://ai.google.dev/
#    - Groq: https://console.groq.com/
#    - ElevenLabs: https://elevenlabs.io/
#    - Twilio: https://www.twilio.com/
#
# 3. Replace all "your_*_here" placeholders with your actual API keys
#
# 4. Choose your LLM provider by setting LLM_PROVIDER to either "gemini" or "groq"
#
# 5. (Optional) Customize voice by changing ELEVENLABS_VOICE_ID
#
# 6. (Optional) Change GEMINI_MODEL or GROQ_MODEL if you want different models
#
# 7. Run: docker compose up --build -d
# =============================================================================
